name: Code Coverage and Linting
on: [push, pull_request]

jobs:
  typechecks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9,3.10.2]
    steps:
      - uses: actions/checkout@master
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Flake8
        run: |
          poetry install
          poetry run flake8 asyncdagpi --count --show-source --statistics

      - name: Run type checking
        run: |
          npm install -g pyright
          pyright --lib --verifytypes asyncdagpi --ignoreexternal

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9,3.10.2]
    env:
      PYTHON: ${{ matrix.python-version }}
      DAGPI_TOKEN: ${{ secrets.DAGPI_TOKEN }}
    steps:
      - uses: actions/checkout@master
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Get Python version
        id: python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: poetry-venv-${{ runner.os }}-${{ steps.python-version.outputs.version }}
      - name: Install/update package and dependencies
        run: poetry install

      - name: Test with Pytest and measure coverage
        run: poetry run pytest --cov-report=xml --cov=asyncdagpi tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
